#!/usr/bin/env ruby

board = [" ", " ", " ", " ", " ", " ", " ", " ", " "]

WIN_CONDITION = [
 [0, 1, 2],
 [3, 4, 5],
 [6, 7, 8],
 [0, 3, 6],
 [1, 4, 7],
 [2, 5, 8],
 [0, 4, 8],
 [6, 4, 2]
]

class Winner
  attr_accessor :name
end

# DISPLAY THE BOARD
def display_board(board)
  puts " #{board[0]} | #{board[1]} | #{board[2]} "
  puts "-----------"
  puts " #{board[3]} | #{board[4]} | #{board[5]} "
  puts "-----------"
  puts " #{board[6]} | #{board[7]} | #{board[8]} "
end

# USER INPUT TO THE ARRAY POSITION
def input_to_index(user_input)
  user_input.to_i - 1
end

# USER MOVEMENT - X or O to a certain position
def move(board, index, player) 
  board[index] = player
end

# THE POSITION IS ALREADY TAKEN
def position_taken?(board, index)
  if((board[index] == " ") || 
     (board[index] == "") ||
     (board[index] == nil))
    return false
  else 
    return true
  end
end

# VALIDATE THE MOVE
def valid_move?(board, index)
  # THE PLAYER INPUT IS BETWEEN 0 AND 8 AND THE POSITION IS NOT TAKEN
  if index.between?(0, 8) && !position_taken?(board, index)
    return true
  end
end

# KEEP TRACK OF THE TURNS
def count_turns(board)
  counter = 0
  board.each do |spaces|
    if spaces == "X" || spaces == "O"
        counter += 1
    end
  end
  counter
end

# DEFINE THE CURRENT PLAYER
def current_player(board)
  count_turns(board) % 2 == 0 ? "X" : "O"
end

# define the player - our game loop
def player(board)
  until game_over?(board)
    turn(board)
  end
  if won?(board)
    winner(board) == "X" || winner(board) == "O"
    puts "Congrats! #{winner(board)}"
  elsif draw?(board)
    puts "Draw"
  end 
end

# define the turn - checks what happens in each turn
def turn(board)
  puts "Type 1 to 9: "
  user_input = gets.strip
  index = input_to_index(user_input)
  if valid_move?(board, index)
    move(board, index, current_player(board))
  end
  display_board(board)
end

# winning condition
def won?(board)
  WIN_CONDITION.each do |win_comb|

    win_index_1 = win_comb[0]
    win_index_2 = win_comb[1]
    win_index_3 = win_comb[2]

    position_1 = board[win_index_1]
    position_2 = board[win_index_2]
    position_3 = board[win_index_3]

    if position_1 == position_2 && 
       position_1 == position_3 && 
       position_taken?(board, win_index_1)
      return true
    end
  end
  return false
end

# Draw - board is full and without a winner
def full?(board)
  board.all? { |i| i == "X" || i == "O" }
end

def draw?(board)
  if !won?(board) && full?(board)
    return true
  elsif !won?(board) && !full?(board)
    return false
  else won?(board)
    return false
  end
end

# check if it is game over
def game_over?(board)
  if draw?(board) || won?(board) || full?(board)
    return true
  end
end

# check if there is a winner
def winner(board)
  if won?(board)
    return board[won?(board)]
  end
end

winner = Winner.new
winner.name = "X"
p winner.name
player(board)
